# Generated by Django 4.2.1 on 2023-06-19 07:59

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import indexer_api.validators


class Migration(migrations.Migration):

    dependencies = [
        ('indexer_api', '0018_alter_network_chain_id_alter_network_rpc_url_and_more'),
    ]

    operations = [
        migrations.AddField(
            model_name='tokentransfer',
            name='fetched_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='fetched_transfers', to='indexer_api.indexer'),
        ),
        migrations.AlterField(
            model_name='indexer',
            name='name',
            field=models.CharField(help_text='Name should be a valid container identifier. Example: <code>polygon-mainnet-usdt-tracker</code>', max_length=255, unique=True, validators=[django.core.validators.RegexValidator(message='Name should be a valid Docker container name in format my-indexer-name', regex='^[a-z]{1}[a-z0-9-]+$')]),
        ),
        migrations.AlterField(
            model_name='network',
            name='explorer_url',
            field=models.CharField(blank=True, default='', help_text="Provide root URL of explorer with no trailing slash. Example: 'https://etherscan.io'", max_length=2550, validators=[django.core.validators.URLValidator(schemes=('http', 'https')), indexer_api.validators.validate_explorer_url]),
        ),
        migrations.AlterField(
            model_name='token',
            name='address',
            field=models.CharField(blank=True, help_text='Provide a valid 20-byte Ethereum address with <code>0x</code> prefix. <br>For native token leave this field empty', max_length=42, null=True, validators=[indexer_api.validators.validate_ethereum_address]),
        ),
        migrations.AlterField(
            model_name='token',
            name='strategy',
            field=models.CharField(choices=[('event_based_transfer', 'Event-based transfers'), ('receipt_based_transfer', 'Receipt-based transfers')], help_text='Use Receipt-based transfer strategy only with native token. <b>Note</b>: it can be very slow to index. <br> Use Event-based transfers for all other token types.', max_length=255),
        ),
        migrations.AlterField(
            model_name='token',
            name='type',
            field=models.CharField(choices=[('native', 'Native'), ('erc20', 'ERC20 Fungible token'), ('erc721', 'NFT ERC721'), ('erc721enumerable', 'NFT ERC721Enumerable'), ('erc777', 'ERC777 Fungible token'), ('erc1155', 'ERC1155 collection token')], help_text='Options NFT ERC721 and NFT ERC721Enumerable are the same when only transfers will be tracked.<br>When balances are indexed, NFT ERC721Enumerable is a better option than ERC721 since it allows to see exact owned token ids. <br>Note: make sure contract implements <code>ERC721Enumerable</code> before marking token as NFT ERC721Enumerable', max_length=255),
        ),
        migrations.AlterField(
            model_name='tokenbalance',
            name='holder',
            field=models.CharField(max_length=42, validators=[indexer_api.validators.validate_ethereum_address]),
        ),
        migrations.AlterField(
            model_name='tokentransfer',
            name='recipient',
            field=models.CharField(max_length=42, validators=[indexer_api.validators.validate_ethereum_address]),
        ),
        migrations.AlterField(
            model_name='tokentransfer',
            name='sender',
            field=models.CharField(max_length=42, validators=[indexer_api.validators.validate_ethereum_address]),
        ),
    ]
